#!/bin/csh

# **********************
# PRE_PIPE
# **********************

echo "Proceeding with pre-pipeline check.."
echo

set start_time = `date -d now +"%s"`
echo "Execution UNIX start time: "$start_time"s"
echo

# DEFINITIONS AND INPUT

set obj_file = $1
set arc_file = $2

echo "Object File:\t"`basename $obj_file`
echo "Arc File:\t"`basename $arc_file`
echo

# SORT DIRECTORY AND COPY RAW FILES

set dir_name = `basename $obj_file | sed 's/\.[^.]*$//'`

mkdir $dir_name

cp $obj_file $dir_name > /dev/null
cp $arc_file $dir_name > /dev/null

cd $dir_name

# SET OUTPUT FILE NAME

set out_file_raw = `basename $obj_file | sed 's/\.[^.]*$//'`
set out_file_amended = `echo $out_file_raw | awk -F'_' '{ print $1"_"$2"_"$3"_"$4"_"$5"_"$6"_2" }'`
set out_file = $out_file_amended".fits"

## - STEP 1 -
## Need to find out which configuration first by evaluating CONFNAME .FITS key

echo "Checking GRATID key to establish configuration."

set obj_file_noext = `basename $obj_file |awk -F. '{ print $1 }'`
set arc_file_noext = `basename $arc_file |awk -F. '{ print $1 }'`

set obj_file = `basename $obj_file`
set arc_file = `basename $arc_file`

set OBJ_GRATID = `frkeyval $obj_file GRATID`

set GRATID = $OBJ_GRATID
echo 

## - STEP 2 -
## Configuration consistency check between object and arc files.

##echo
##echo "Checking consistency of CONFNAME value between object and arc files."

##if ("$ARC_GRATID" == "$OBJ_GRATID") then
##	echo
##	echo "-	Consistency check: OK."
##	set GRATID = $OBJ_GRATID
##else 
##	echo
##	echo "-	Consistency check: FAIL."
##	echo
##	goto error
##endif

## - STEP 3 -
## Set associated config variables

if ("$GRATID" == "Red-Low") then
	set config_dir = "red_g" set config_arm = "red" set config_res = "low" set runon_script_name = "pipe_red_low"
	echo "-	Using the $config_arm arm with $config_res dispersion."
else if ("$GRATID" == "Red-High") then
	set config_dir = "red_vph" set config_arm = "red" set config_res = "high" set runon_script_name = "pipe_red_high"	
	echo "-	Using the $config_arm arm with $config_res dispersion."
else if ("$GRATID" == "Blue-Low") then
	set config_dir = "blue_g" set config_arm = "blue" set config_res = "low" set runon_script_name = "pipe_blue_low"	
	echo "-	Using the $config_arm arm with $config_res dispersion."
else if ("$GRATID" == "Blue-High") then
	set config_dir = "blue_vph" set config_arm = "blue" set config_res = "high" set runon_script_name = "pipe_blue_high"	
	echo "-	Using the $config_arm arm with $config_res dispersion."
else 
	echo "-	Config not found. It's possible that the GRATID key has changed."
	echo
	goto error
endif

## - STEP 4 -
## Set directories

echo
echo "Setting directory paths."

set flat_dir = "$pipeline_dir/flats/$config_dir/"
set arc_dir = "$pipeline_dir/arcs/$config_dir/"
set lookup_dir = "$pipeline_dir/config/lookup/$config_dir"

echo
echo "-	Sky flat directory is: $flat_dir"
echo "-	Arc directory is: $arc_dir"
echo "-	Lookup directory is: $lookup_dir"

## - STEP 5 -
## Process object date 

echo
echo "Checking DATE .FITS key to match corresponding sky/arc-list files."

set OBJ_DATE = `frkeyval $obj_file DATE`
set OBJ_TIME = `frkeyval $obj_file UTSTART`

set obj_date_formatted = `date -d "$OBJ_DATE $OBJ_TIME" +"%d/%m/%Y %T"`
set obj_date_unix = `date -d "$OBJ_DATE $OBJ_TIME" +"%s"`

echo
echo "-	Datetime of observation: $OBJ_DATE ($obj_date_formatted)"
echo "-	Unix timestamp of observation : $obj_date_unix"

## - STEP 6 -
## Lookup corresponding sky/arc-list files

echo
echo "Matching corresponding sky file."

set sky_error = 1

set i=`cat $lookup_dir/sky.tab | wc -l`
set j=1

while ($j <= $i)

	set line=`cat $lookup_dir/sky.tab| head -$j | tail -1`

	@ j = $j + 1

	set from_day =  `echo $line[2] | gawk -F "/" '{print $1}'`
	set from_month =  `echo $line[2] | gawk -F "/" '{print $2}'`
	set from_year =  `echo $line[2] | gawk -F "/" '{print $3}'`

	set uk_locale_date_from = $from_day"/"$from_month"/"$from_year
	set us_locale_date_from = $from_month"/"$from_day"/"$from_year

	set date_from_unix = `date -d "$us_locale_date_from $line[3]" +"%s"`
	set date_from_formatted = "$uk_locale_date_from $line[3]"

	if ($line[4] == 'now') then
	
		set date_to_unix = `date -d $line[4] +"%s"`	
		set date_to_formatted = "$line[4]"
		
	else

		set to_day =  `echo $line[4] | gawk -F "/" '{print $1}'`
		set to_month =  `echo $line[4] | gawk -F "/" '{print $2}'`
		set to_year =  `echo $line[4] | gawk -F "/" '{print $3}'`

		set uk_locale_date_to = $to_day"/"$to_month"/"$to_year
		set us_locale_date_to = $to_month"/"$to_day"/"$to_year

		set date_to_unix = `date -d "$us_locale_date_to $line[5]" +"%s"`
		set date_to_formatted = "$uk_locale_date_to $line[5]"

	endif

	if ("$obj_date_unix" >= "$date_from_unix" && "$obj_date_unix" <=  "$date_to_unix") then
		echo
		echo "-	Sky flat found."
		echo "-	Date from $date_from_formatted to $date_to_formatted"
		echo "-	Location: $line[1]"
		echo
		set sky_file = "$flat_dir$line[1]"
		set sky_error = 0
		break
	endif

end

if ($sky_error == 1) then
	echo 
	echo "- No sky flat found."
	echo 
	goto error
endif

set arc_error = 1

echo "Matching corresponding arc-list file."

set i=`cat $lookup_dir/arc.tab | wc -l`
set j=1

while ($j <= $i)

	set line=`cat $lookup_dir/arc.tab| head -$j | tail -1`

	@ j = $j + 1

	set from_day =  `echo $line[2] | gawk -F "/" '{print $1}'`
	set from_month =  `echo $line[2] | gawk -F "/" '{print $2}'`
	set from_year =  `echo $line[2] | gawk -F "/" '{print $3}'`

	set uk_locale_date_from = $from_day"/"$from_month"/"$from_year
	set us_locale_date_from = $from_month"/"$from_day"/"$from_year

	set date_from_unix = `date -d "$us_locale_date_from $line[3]" +"%s"`
	set date_from_formatted = "$uk_locale_date_from $line[3]"

	if ($line[4] == 'now') then
	
		set date_to_unix = `date -d $line[4] +"%s"`	
		set date_to_formatted = "$line[4]"
		
	else

		set to_day =  `echo $line[4] | gawk -F "/" '{print $1}'`
		set to_month =  `echo $line[4] | gawk -F "/" '{print $2}'`
		set to_year =  `echo $line[4] | gawk -F "/" '{print $3}'`

		set uk_locale_date_to = $to_day"/"$to_month"/"$to_year
		set us_locale_date_to = $to_month"/"$to_day"/"$to_year

		set date_to_unix = `date -d "$us_locale_date_to $line[5]" +"%s"`
		set date_to_formatted = "$uk_locale_date_to $line[5]"

	endif

	if ("$obj_date_unix" >= "$date_from_unix" && "$obj_date_unix" <= "$date_to_unix") then
		echo
		echo "-	Arc list found."
		echo "-	Date from $date_from_formatted to $date_to_formatted"
		echo "-	Location: $line[1]"
		echo
		set arc_list_file = "$arc_dir$line[1]"
		set arc_error = 0
		break
	endif

end

if ($arc_error == 1) then
	echo 
	echo "- No arc list found."
	echo 
	goto error
endif

## - STEP 7 -
## Print results

echo "RESULTS:"
echo

echo "-	Full sky flat file location: $sky_file"
echo "-	Full arc list file location: $arc_list_file"
echo

## - STEP 8 -
## Cleanup and proceed to pipe script

echo "Success - Proceeding with L2 pipeline reduction.."

rm -f $arc_file_noext"_converted.sdf" > /dev/null
rm -f $obj_file_noext"_converted.sdf" > /dev/null

source $script_dir/pipe

error:
exit 1

